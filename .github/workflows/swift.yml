name: iOS CI/CD

on:
  push:
    branches:
      - MyChoice # or your main development branch
  pull_request:
    branches:
      - MyChoice

jobs:
  build_and_archive:
    runs-on: macos-latest # Use a macOS runner for iOS builds

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.x' # Specify your Xcode version, e.g., '15.3'
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
         node-version: '20' # or the version your project uses

    - name: Install dependencies
      run: npm ci

    - name: Install CocoaPods dependencies (if applicable)
      run: |
        pod install --repo-update # Run this if your project uses CocoaPods
      working-directory: ./ios/App/ # Adjust if your .xcodeproj is in a subdirectory

    - name: Build and Archive
      run: |
        xcodebuild -workspace YourProjectName.xcworkspace \ # Use .xcworkspace if you have one (e.g., with CocoaPods)
                   -scheme YourSchemeName \
                   -configuration Release \
                   archive \
                   -archivePath build/YourApp.xcarchive \
                   CODE_SIGN_IDENTITY="Apple Distribution: Your Company Name (YourTeamID)" \ # Replace with your signing identity
                   PROVISIONING_PROFILE_SPECIFIER="YourProvisioningProfileName" \ # Replace with your provisioning profile name
                   DEVELOPMENT_TEAM="YourTeamID" # Replace with your Apple Developer Team ID
      
        # Securely store sensitive information like signing certificates and provisioning profiles
        # as GitHub Secrets and reference them here.
        # For example:
        # CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        # PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
      working-directory: ./ios/App/ # Adjust if your .xcodeproj is in a subdirectory

    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
                   -archivePath build/YourApp.xcarchive \
                   -exportPath build/ipa \
                   -exportOptionsPlist ExportOptions.plist # Create this file with export options
      working-directory: ./ios/App/ # Adjust if your .xcodeproj is in a subdirectory

    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: YourApp.ipa
        path: ./ios/App//build/ipa/WBTour.ipa # Adjust path to your generated IPA
